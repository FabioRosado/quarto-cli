- id: math-methods
  enum:
    values: [plain, webtex, gladtex, mathml, mathjax, katex]

- id: pandoc-format-request-headers
  arrayOf:
    arrayOf:
      schema: string
      length: 2

- id: pandoc-format-output-file
  anyOf:
    - path
    - enum:
        values: [null]
        hidden: true

- id: pandoc-format-filters
  arrayOf:
    anyOf:
      - path
      - record:
          type: string
          path: path
      - record:
          type:
            enum: [citeproc]

- id: page-column
  enum:
    [
      body,
      body-outset,
      body-outset-left,
      body-outset-right,
      page,
      page-left,
      page-right,
      page-inset-left,
      page-inset-right,
      screen,
      screen-left,
      screen-right,
      screen-rightcolumn,
      screen-inset,
      screen-inset-shaded,
      screen-inset-left,
      screen-inset-right,
      margin,
    ]

- id: navigation-item
  anyOf:
    - path
    - object:
        properties:
          href:
            string:
              description: |
                Link to file contained with the project or external URL
          url:
            hidden: true
            string:
              description: |
                Alias for href
          file:
            hidden: true
            string:
              description: |
                Alias for href
          text:
            string:
              description: |
                Text to display for navigation item (defaults to the
                document title if not provided)
          icon:
            string:
              description:
                short: Name of bootstrap icon (e.g. `github`, `twitter`, `share`)
                long: |
                  Name of bootstrap icon (e.g. `github`, `twitter`, `share`)
                  See <https://icons.getbootstrap.com/> for a list of available icons
          aria-label:
            string:
              description: "Accessible label for the navigation item."
          menu:
            arrayOf:
              schema:
                ref: navigation-item
        additionalProperties: false

- id: tool-item
  object:
    properties:
      icon:
        string:
          description:
            short: Name of bootstrap icon (e.g. `github`, `twitter`, `share`)
            long: |
              Name of bootstrap icon (e.g. `github`, `twitter`, `share`)
              See <https://icons.getbootstrap.com/> for a list of available icons
      href:
        string:
          description: |
            Link to file contained with the project or external URL
      menu:
        arrayOf:
          schema:
            ref: navigation-item

- id: comments
  object:
    additionalProperties: false
    properties:
      utterances:
        object:
          properties:
            repo:
              string:
                description: The Github repo that will be used to store comments.
            label:
              string:
                description: The label that will be assigned to issues created by Utterances.
            theme:
              string:
                description:
                  short: The Github theme that should be used for Utterances.
                  long: |
                    The Github theme that should be used for Utterances
                    (`github-light`, `github-dark`, `github-dark-orange`,
                    `icy-dark`, `dark-blue`, `photon-dark`, `body-light`,
                    or `gruvbox-dark`)
                completions:
                  - github-light
                  - github-dark
                  - github-dark-orange
                  - icy-dark
                  - dark-blue
                  - photon-dark
                  - body-light
                  - gruvbox-dark
              issue-term:
                string:
                  description:
                    short: How posts should be mapped to Github issues
                    long: |
                      How posts should be mapped to Github issues
                      (`pathname`, `url`, `title` or `og:title`)
                  completions:
                    - pathname
                    - url
                    - title
                    - og:title
          required: [repo]
      giscus:
        object:
          properties:
            repo:
              string:
                description:
                  short: The Github repo that will be used to store comments.
                  long: |
                    The Github repo that will be used to store comments.

                    In order to work correctly, the repo must be public, with the giscus app installed, and 
                    the discussions feature must be enabled.
            repo-id:
              string:
                description:
                  short: The Github repository identifier.
                  long: |
                    The Github repository identifier.

                    You can quickly find this by using the configuration tool at [https://giscus.app](https://giscus.app).
                    If this is not provided, Quarto will attempt to discover it at render time.
            category:
              string:
                description:
                  short: The discussion category where new discussions will be created.
                  long: |
                    The discussion category where new discussions will be created. It is recommended 
                    to use a category with the **Announcements** type so that new discussions 
                    can only be created by maintainers and giscus.
            category-id:
              string:
                description:
                  short: The Github category identifier.
                  long: |
                    The Github category identifier.

                    You can quickly find this by using the configuration tool at [https://giscus.app](https://giscus.app).
                    If this is not provided, Quarto will attempt to discover it at render time.
            mapping:
              anyOf:
                - enum: [pathname, url, title, og:title]
                - string
              description:
                short: The mapping between the page and the embedded discussion.
                long: |
                  The mapping between the page and the embedded discussion. 

                  - `pathname` - the discussion title contains the page path
                  - `url` - the discussion title contains the page url
                  - `title` - the discussion title contains the page title
                  - `og:title`- the discussion title containst the `og:title` metadata value
                  - Any other value will be passed through verbatim and a discussion title
                  containing that value will be used. If the value is a number it will be treated
                  as a discussion number and automatic discussion creation is not supported.
            reactions-enabled:
              boolean:
                description: Display reactions for the discussion's main post before the comments.
            input-position:
              enum: [top, bottom]
              description: Place the comment input box above or below the comments.
            theme:
              enum:
                [
                  light,
                  light_high_contrast,
                  light_protanopia,
                  dark,
                  dark_high_contrast,
                  dark_protanopia,
                  dark_dimmed,
                  transparent_dark,
                  preferred_color_scheme,
                ]
              description: The giscus theme to use when displaying comments.
            language:
              string:
                description: The language that should be used when displaying the commenting interface.
          required: [repo]
      hypothesis:
        anyOf:
          - boolean
          - object:
              properties:
                openSidebar:
                  boolean:
                    default: false
                    description: Controls whether the sidebar opens automatically on startup.
                showHighlights:
                  anyOf:
                    - boolean
                    - enum: ["always", "never"]
                  default: "always"
                  description: Controls whether the in-document highlights are shown by default (`always` or `never`)
                theme:
                  enum: ["classic", "clean"]
                  default: classic
                  description: Controls the overall look of the sidebar (`classic` or `clean`)
                enableExperimentalNewNoteButton:
                  boolean:
                    default: false
                    description: |
                      Controls whether the experimental New Note button 
                      should be shown in the notes tab in the sidebar.
                usernameUrl:
                  schema: string
                  description: |
                    Specify a URL to direct a user to, 
                    in a new tab. when they click on the annotation author 
                    link in the header of an annotation.
                services:
                  arrayOf:
                    object:
                      properties:
                        apiUrl:
                          string:
                            description: The base URL of the service API.
                        authority:
                          string:
                            description: The domain name which the annotation service is associated with.
                        grantToken:
                          string:
                            description: An OAuth 2 grant token which the client can send to the service in order to get an access token for making authenticated requests to the service.
                        allowLeavingGroups:
                          boolean:
                            default: true
                            description: A flag indicating whether users should be able to leave groups of which they are a member.
                        enableShareLinks:
                          boolean:
                            default: true
                            description: A flag indicating whether annotation cards should show links that take the user to see an annotation in context.
                        groups:
                          anyOf:
                            - enum: ["$rpc:requestGroups"]
                            - arrayOf: string
                          description: An array of Group IDs or the literal string `$rpc:requestGroups`
                        icon:
                          string:
                            description: The URL to an image for the annotation service. This image will appear to the left of the name of the currently selected group.
                      required: [apiUrl, authority, grantToken]
                      description: |
                        Alternative annotation services which the client should 
                        connect to instead of connecting to the public Hypothesis 
                        service at hypothes.is.
                branding:
                  object:
                    properties:
                      accentColor:
                        string:
                          description: Secondary color for elements of the commenting UI.
                      appBackgroundColor:
                        string:
                          description: The main background color of the commenting UI.
                      ctaBackgroundColor:
                        string:
                          description: The background color for call to action buttons.
                      selectionFontFamily:
                        string:
                          description: The font family for selection text in the annotation card.
                      annotationFontFamily:
                        string:
                          description: The font family for the actual annotation value that the user writes about the page or selection.
                    description: Settings to adjust the commenting sidebar's look and feel.
                externalContainerSelector:
                  string:
                    description: A CSS selector specifying the containing element into which the sidebar iframe will be placed.
                focus:
                  object:
                    properties:
                      user:
                        object:
                          properties:
                            username:
                              string:
                                description: The username of the user to focus on.
                            userid:
                              string:
                                description: The userid of the user to focus on.
                            displayName:
                              string:
                                description: The display name of the user to focus on.
                    required: [user]
                  description: Defines a focused filter set for the available annotations on a page.
                requestConfigFromFrame:
                  object:
                    properties:
                      origin:
                        string:
                          description: Host url and port number of receiving iframe
                      ancestorLevel:
                        number:
                          description: Number of nested iframes deep the client is relative from the receiving iframe.
                assetRoot:
                  string:
                    description: The root URL from which assets are loaded.
                sidebarAppUrl:
                  string:
                    description: The URL for the sidebar application which displays annotations.
                    default: "https://hypothes.is/app.html"

- id: social-metadata
  object:
    properties:
      title:
        string:
          description:
            short: "The title of the page"
            long: |
              The title of the page. Note that by default Quarto will automatically 
              use the title metadata from the page. Specify this field if you’d like 
              to override the title for this provider.
      description:
        string:
          description:
            short: "A short description of the content."
            long: |
              A short description of the content. Note that by default Quarto will
              automatically  use the description metadata from the page. Specify this
              field if you’d like to override the description for this provider.
      image:
        path:
          description:
            short: "The path to a preview image for the content."
            long: |
              The path to a preview image for the content. By default, Quarto will use
              the `image` value from the website or book metadata. If you provide an 
              image, you may also optionally provide an `image-width` and `image-height`.
      image-width:
        number:
          description: "Image width (pixels)"
      image-height:
        number:
          description: "Image height (pixels)"

- id: page-footer-region
  anyOf:
    - string
    - arrayOf:
        ref: navigation-item

- id: sidebar-contents
  arrayOf:
    anyOf:
      - ref: navigation-item
      - path
      - object:
          properties:
            section: string
            contents:
              ref: sidebar-contents

- id: base-website
  object:
    properties:
      title:
        string:
          description: "Website title"
      description:
        string:
          description: "Website description"
      fav-icon:
        string:
          description: "The path to the favicon for this website"
      site-url:
        string:
          description: "Base URL for published website"
      site-path:
        string:
          description: |
            Path to site (defaults to '/'). Not required if you specify `site-url`.
      repo-url:
        string:
          description: "Base URL for website source code repository"
      repo-branch:
        string:
          description: "Branch of website source code (defaults to `main`)"
      repo-actions:
        maybeArrayOf:
          enum: [none, edit, source, issue]
          description:
            short: "Links to source repository actions"
            long: "Links to source repository actions (`none` or one or more of `edit`, `source`, `issue`)"
      google-analytics:
        anyOf:
          - string
          - object:
              properties:
                tracking-id:
                  schema: string
                  description: "The Google tracking Id or measurement Id of this website."
                storage:
                  enum: [cookies, none]
                  description:
                    short: "Storage options for Google Analytics data"
                    long: |
                      Storage option for Google Analytics data using on of these two values:

                      `cookies` - Use cookies to store unique user and session identification (default).

                      `none` - Do not use cookies to store unique user and session identification.

                      For more about choosing storage options see [Storage](https://quarto.org/docs/websites/website-tools.html#storage).
                anonymize-ip:
                  schema: boolean
                  description:
                    short: "Anonymize the user ip address."
                    long: |
                      Anonymize the user ip address. For more about this feature, see 
                      [IP Anonymization (or IP masking) in Google Analytics](https://support.google.com/analytics/answer/2763052?hl=en).
                version:
                  enum: [3, 4]
                  description:
                    short: "The version number of Google Analytics to use."
                    long: |
                      The version number of Google Analytics to use. Currently supports either 3 (for analytics.js) or 4 (for gtag). 
                      This is automatically detected based upon the `tracking-id`, but you may specify it.
        description: "Enable Google Analytics for this website"
      cookie-consent:
        anyOf:
          - boolean
          - object:
              properties:
                type:
                  enum: [implied, express]
                  description:
                    short: "The type of consent that should be requested"
                    long: |
                      The type of consent that should be requested, using one of these two values:

                      `implied` - (default) This will notify the user that the site uses cookies and permit them to change preferences, but not block cookies unless the user changes their preferences.

                      `express` - This will block cookies until the user expressly agrees to allow them (or continue blocking them if the user doesn’t agree).
                style:
                  enum: [simple, headline, interstitial, standalone]
                  description:
                    short: "The style of the consent banner that is displayed"
                    long: |
                      The style of the consent banner that is displayed:

                      `simple` - (default) A simple dialog in the lower right corner of the website.

                      `headline` - A full width banner across the top of the website.

                      `interstitial` - An semi-transparent overlay of the entire website.

                      `standalone` - An opaque overlay of the entire website.
                palette:
                  enum: [light, dark]
                  description: "Whether to use a dark or light appearance for the consent banner"
                policy-url:
                  schema: string
                  description: "The url to the website’s cookie or privacy policy."
                prefs-text:
                  schema: string
                  description:
                    short: "The text to display for the cookie preferences link in the website footer."
        description:
          short: "Request cookie consent before enabling scripts that set cookies"
          long: |
            Quarto includes the ability to request cookie consent before enabling scripts that set cookies, using [Cookie Consent](https://www.cookieconsent.com/).

            The user’s cookie preferences will automatically control Google Analytics (if enabled) and can be used to control custom scripts you add as well. For more information see [Custom Scripts and Cookie Consent](https://quarto.org/docs/websites/website-tools.html#custom-scripts-and-cookie-consent).
      search:
        anyOf:
          - boolean
          - object:
              properties:
                location:
                  enum: [navbar, sidebar]
                  description: "Location for search widget (`navbar` or `sidebar`)"
                type:
                  enum: [overlay, textbox]
                  description: "Type of search UI (`overlay` or `textbox`)"
                limit:
                  schema: number
                  description: "Number of matches to display (defaults to 20)"
                collapse-after:
                  schema: number
                  description: "Matches after which to collapse additional results"
                copy-button:
                  schema: boolean
                  description: "Provide button for copying search link"
                algolia:
                  object:
                    properties:
                      index-name:
                        schema: string
                        description: "The name of the index to use when performing a search"
                      application-id:
                        schema: string
                        description: "The unique ID used by Algolia to identify your application"
                      search-only-api-key:
                        schema: string
                        description: "The Search-Only API key to use to connect to Algolia"
                      analytics-events:
                        boolean:
                          description: "Enable tracking of Algolia analytics events"
                      show-logo:
                        boolean:
                          description: "Enable the display of the Algolia logo in the search results footer."
                      index-fields:
                        object:
                          properties:
                            href:
                              schema: string
                              description: "Field that contains the URL of index entries"
                            title:
                              schema: string
                              description: "Field that contains the title of index entries"
                            text:
                              schema: string
                              description: "Field that contains the text of index entries"
                            section:
                              schema: string
                              description: "Field that contains the section of index entries"
                          additionalProperties: false
                      params:
                        object:
                          description: "Additional parameters to pass when executing a search"
                    additionalProperties: false
                  description: "Use external Algolia search index"
              additionalProperties: false
        description: "Provide full text search for website"

      navbar:
        anyOf:
          - boolean
          - object:
              properties:
                title:
                  anyOf:
                    - string
                    - boolean
                  description: "The navbar title. Uses the project title if none is specified."
                logo:
                  path:
                    description: "Path to a logo image that will be displayed to the left of the title."
                background:
                  anyOf:
                    - enum:
                        [
                          "primary",
                          "secondary",
                          "success",
                          "danger",
                          "warning",
                          "info",
                          "light",
                          "dark",
                        ]
                    - string
                  description: "The navbar's background color (named or hex color)."
                foreground:
                  anyOf:
                    - enum:
                        [
                          "primary",
                          "secondary",
                          "success",
                          "danger",
                          "warning",
                          "info",
                          "light",
                          "dark",
                        ]
                    - string
                  description: "The navbar's foreground color (named or hex color)."
                search:
                  boolean:
                    description: "Include a search box in the navbar."
                pinned:
                  boolean:
                    description: "Always show the navbar (keeping it pinned)."
                    default: false
                collapse:
                  boolean:
                    description: "Collapse the navbar into a menu when the display becomes narrow."
                    default: true
                collapse-below:
                  enum: [sm, md, lg, xl, xxl]
                  description: "The responsive breakpoint below which the navbar will collapse into a menu."
                  default: "lg"
                left:
                  arrayOf:
                    ref: navigation-item
                  description: "List of items for the left side of the navbar."
                right:
                  arrayOf:
                    ref: navigation-item
                  description: "List of items for the right side of the navbar."
        description: "Top navigation options"

      sidebar:
        anyOf:
          - boolean
          - maybeArrayOf:
              object:
                properties:
                  id:
                    string:
                      description: "The identifier for this sidebar."
                  title:
                    anyOf:
                      - string
                      - boolean
                    description: "The sidebar title. Uses the project title if none is specified."
                  subtitle:
                    string:
                      description: "The subtitle for this sidebar."
                  logo:
                    path:
                      description: "Path to a logo image that will be displayed in the sidebar."
                  search:
                    boolean:
                      description: "Include a search control in the sidebar."
                  tools:
                    arrayOf:
                      ref: tool-item
                    description: "List of sidebar tools"
                  contents:
                    ref: sidebar-contents
                    description: "List of items for the sidebar"
                  style:
                    enum: ["docked", "floating"]
                    description: "The style of sidebar (`docked` or `floating`)."
                    default: "floating"
                  background:
                    anyOf:
                      - enum:
                          [
                            "primary",
                            "secondary",
                            "success",
                            "danger",
                            "warning",
                            "info",
                            "light",
                            "dark",
                          ]
                      - string
                    description: "The sidebar's background color (named or hex color)."
                  foreground:
                    anyOf:
                      - enum:
                          [
                            "primary",
                            "secondary",
                            "success",
                            "danger",
                            "warning",
                            "info",
                            "light",
                            "dark",
                          ]
                      - string
                    description: "The sidebar's foreground color (named or hex color)."
                  border:
                    boolean:
                      descrition: "Whether to show a border on the sidebar (defaults to true for 'docked' sidebars)"
                  alignment:
                    enum: ["left", "right", "center"]
                    description: "Alignment of the items within the sidebar (`left`, `right`, or `center`)"
                  collapse-level:
                    number:
                      description: "The depth at which the sidebar contents should be collapsed by default."
                      default: 2
                  pinned:
                    boolean:
                      description: "When collapsed, pin the collapsed sidebar to the top of the page."
                  header:
                    maybeArrayOf: string
                    description: "Markdown to place above sidebar content (text or file path)"
                  footer:
                    maybeArrayOf: string
                    description: "Markdown to place below sidebar content (text or file path)"
        description: "Side navigation options"
      body-header:
        string:
          description: "Markdown to insert at the beginning of each page’s body (below the title and author block)."
      body-footer:
        string:
          description: "Markdown to insert below each page’s body."
      margin-header:
        maybeArrayOf: string
        description: "Markdown to place above margin content (text or file path)"
      margin-footer:
        maybeArrayOf: string
        description: "Markdown to place below margin content (text or file path)"
      page-navigation:
        boolean:
          description: "Provide next and previous article links in footer"
      page-footer:
        anyOf:
          - string
          - object:
              properties:
                left:
                  ref: page-footer-region
                  description: "Footer left content"
                right:
                  ref: page-footer-region
                  description: "Footer right content"
                center:
                  ref: page-footer-region
                  description: "Footer center content"
                border:
                  anyOf:
                    - boolean
                    - string
                  description: "Footer border (`true`, `false`, or a border color)"
                background:
                  schema: string
                  description: "Footer background color"
                foreground:
                  schema: string
                  description: "Footer foreground color"
              additionalProperties: false
        description: "Shared page footer"
      image:
        path:
          description: |
            Default site thumbnail image for `twitter` /`open-graph`

      comments:
        schema:
          ref: comments

      open-graph:
        anyOf:
          - boolean
          - object:
              super:
                resolveRef: social-metadata
              properties:
                locale:
                  string:
                    description: "Locale of open graph metadata"
                site-name:
                  string:
                    description:
                      short: "Name that should be displayed for the overall site"
                      long: |
                        Name that should be displayed for the overall site. If not explicitly 
                        provided in the `open-graph` metadata, Quarto will use the website or
                        book `title` by default.
              additionalProperties: false
        description: "Publish open graph metadata"
      twitter-card:
        anyOf:
          - boolean
          - object:
              super:
                resolveRef: social-metadata
              properties:
                card-style:
                  enum: [summary, summary_large_image]
                  description:
                    short: "Card style"
                    long: |
                      Card style (`summary` or `summary_large_image`). If this is not provided, the best style will automatically
                      selected based upon other metadata. You can learn more about Twitter Card
                      styles [here](https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/abouts-cards).
                creator:
                  string:
                    description: "`@username` of the content creator (must be a quoted string)"
                site:
                  string:
                    description: "`@username` of the website (must be a quoted string)"
              additionalProperties: false
        description: "Publish twitter card metadata"

- id: chapter-item
  anyOf:
    - ref: navigation-item
    - object:
        part:
          string:
            description: "Part title or path to input file"
        chapters:
          arrayOf:
            ref: navigation-item
          description: "Path to chapter input file"
        required: [part]

- id: chapter-list
  arrayOf:
    ref: chapter-item
- id: crossref-labels-schema
  string:
    completions:
      - alpha
      - arabic
      - roman

- id: epub-contributor
  anyOf:
    - string
    - maybeArrayOf:
        object:
          properties:
            role:
              string:
                description:
                  short: The role of this creator or contributor.
                  long: |
                    The role of this creator or contributor using 
                    [MARC relators](https://loc.gov/marc/relators/relaterm.html). Human readable
                    translations to commonly used relators (e.g. 'author', 'editor') will 
                    attempt to be automatically translated.
            file-as:
              string:
                description: An alternate version of the creator or contributor text used for alphabatizing.
            text:
              string:
                description: The text describing the creator or contributor (for example, creator name).

- id: format-language
  object:
    properties:
      toc-title-document: string
      toc-title-website: string
      callout-tip-caption: string
      callout-note-caption: string
      callout-warning-caption: string
      callout-important-caption: string
      callout-danger-caption: string
      section-title-abstract: string
      section-title-footnotes: string
      section-title-appendices: string
      code-summary: string
      code-tools-menu-caption: string
      code-tools-show-all-code: string
      code-tools-hide-all-code: string
      code-tools-view-source: string
      code-tools-source-code: string
      search-no-results-text: string
      copy-button-tooltip: string
      repo-action-links-edit: string
      repo-action-links-source: string
      repo-action-links-issue: string
      search-matching-documents-text: string
      search-copy-link-title: string
      search-hide-matches-text: string
      search-more-match-text: string
      search-more-matches-text: string
      search-clear-button-title: string
      search-detached-cancel-button-title: string
      search-submit-button-title: string
      crossref-fig-title: string
      crossref-tbl-title: string
      crossref-lst-title: string
      crossref-thm-title: string
      crossref-lem-title: string
      crossref-cor-title: string
      crossref-prp-title: string
      crossref-cnj-title: string
      crossref-def-title: string
      crossref-exm-title: string
      crossref-exr-title: string
      crossref-fig-prefix: string
      crossref-tbl-prefix: string
      crossref-lst-prefix: string
      crossref-sec-prefix: string
      crossref-eq-prefix: string
      crossref-thm-prefix: string
      crossref-lem-prefix: string
      crossref-cor-prefix: string
      crossref-prp-prefix: string
      crossref-cnj-prefix: string
      crossref-def-prefix: string
      crossref-exm-prefix: string
      crossref-exr-prefix: string
      crossref-lof-title: string
      crossref-lot-title: string
      crossref-lol-title: string
    errorDescription: "be a format language description object"

- id: website-about
  object:
    additionalProperties: false
    properties:
      template:
        enum: [jolla, trestles, solana, marquee, broadside]
        description:
          short: "The template to use to layout this about page."
          long: |
            The template to use to layout this about page. Choose from:

            - `jolla`
            - `trestles`
            - `solana`
            - `marquee`
            - `broadside`
      image:
        path:
          description:
            short: "The path to the main image on the about page."
            long: |
              The path to the main image on the about page. If not specified, 
              the `image` provided for the document itself will be used.
      image-width:
        string:
          description:
            short: "A valid CSS width for the about page image."
            long: |
              A valid CSS width for the about page image.
      image-shape:
        enum: [rectangle, round, rounded]
        description:
          short: "The shape of the image on the about page."
          long: |
            The shape of the image on the about page.

            - `rectangle`
            - `round`
            - `rounded`
      links:
        arrayOf:
          ref: navigation-item

- id: website-listing
  object:
    additionalProperties: false
    properties:
      id:
        string:
          description:
            short: "The id of this listing."
            long: |
              The id of this listing. When the listing is rendered, it will 
              place the contents into a `div` with this id. If no such `div` is defined on the 
              page, a `div` with this id will be created and appended to the end of the page.

              In no `id` is provided for a listing, Quarto will synthesize one when rendering the page.
      type:
        enum: [default, table, grid]
        description:
          short: "The type of listing to create."
          long: |
            The type of listing to create. Choose one of:

            - `default` - a blog style list of items
            - `table` - a table of items
            - `grid` - a grid of item cards
      contents:
        anyOf:
          - maybeArrayOf: string
          - object:
              additionalProperties: true
        description: "The files or path globs of Quarto documents or YAML files that should be included in the listing."
      sort:
        maybeArrayOf: string
        description:
          short: "Sort items in the listing by these fields."
          long: |
            Sort items in the listing by these fields. The sort key is made up of a 
            field name followed by a direction `asc` or `desc`.

            For example:
            `date asc`
      page-size:
        number:
          description:
            short: The number of items to display on a page.
      sort-ui:
        anyOf:
          - boolean
          - arrayOf: string
        description:
          short: "Shows or hides the sorting control for the listing."
          long: |
            Shows or hides the sorting control for the listing. To control the 
            fields that will be displayed in the sorting control, provide a list
            of field names.
      filter-ui:
        anyOf:
          - boolean
          - arrayOf: string
        description:
          short: "Shows or hides the filtering control for the listing."
          long: |
            Shows or hides the filtering control for the listing. To control the 
            fields that will be used to filter the listing, provide a list
            of field names. By default all fields of the listing will be used
            when filtering.
      categories:
        anyOf:
          - boolean
          - enum: [numbered, unnumbered, cloud]
        description:
          short: "Display item categories from this listing in the margin of the page."
          long: |
            Display item categories from this listing in the margin of the page.

              - `numbered` - category list with number of items
              - `unnumbered` - category list
              - `cloud` - word cloud style categories
      feed:
        anyOf:
          - boolean
          - object:
              additionalProperties: false
              properties:
                items:
                  number:
                    description: |
                      The number of items to include in your feed. Defaults to 20.
                type:
                  enum: [full, partial]
                  description:
                    short: Whether to include full or partial content in the feed.
                    long: |
                      Whether to include full or partial content in the feed. Choose one of

                      - `full` - the complete content of the document will be included in the feed.
                      - `partial` - the firt paragraph of the document will be included in the feed.

                      Defaults to `full`.
                title:
                  string:
                    description:
                      short: The title for this feed.
                      long: |
                        The title for this feed. Defaults to the site title provided the Quarto project.
                image:
                  path:
                    description:
                      short: The path to an image for this feed.
                      long: |
                        The path to an image for this feed. If not specified, the image for the page the listing 
                        appears on will be used, otherwise an image will be used if specified for the site 
                        in the Quarto project.
                description:
                  string:
                    description:
                      short: The description of this feed.
                      long: |
                        The description of this feed. If not specified, the description for the page the 
                        listing appears on will be used, otherwise the description 
                        of the site will be used if specified in the Quarto project.
                language:
                  string:
                    description:
                      short: The language of the feed.
                      long: |
                        The language of the feed. Omitted if not specified. 
                        See [https://www.rssboard.org/rss-language-codes](https://www.rssboard.org/rss-language-codes)
                        for a list of valid language codes.
        description: Enables an RSS feed for the listing.
      date-format:
        string:
          description:
            short: "The date format to use when displaying dates (e.g. d-M-yyy)."
            long: |
              The date format to use when displaying dates (e.g. d-M-yyy). 
              Learn more about supported date formatting values [here](https://deno.land/std@0.125.0/datetime).
      max-description-length:
        number:
          description:
            short: "The maximum length (in characters) of the description displayed in the listing."
            long: |
              The maximum length (in characters) of the description displayed in the listing.
              Defaults to 175.
      image-align:
        enum: [left, right]
        description: In `default` type listings, whether to place the image on the right or left side of the post content.
      image-height:
        string:
          description:
            short: "The height of the image being displayed."
            long: |
              The height of the image being displayed (a CSS height string).

              The width is automatically determined and the image will fill the rectangle without scaling (cropped to fill).
      grid-columns:
        number:
          description:
            short: "In `grid` type listings, the number of columns in the grid display."
            long: |
              In grid type listings, the number of columns in the grid display.
              Defaults to 3.
      grid-item-border:
        boolean:
          description:
            short: "In `grid` type listings, whether to display a border around the item card."
            long: |
              In grid type listings, whether to display a border around the item card. Defaults to `true`.
      grid-item-align:
        enum: [left, right, center]
        description:
          short: "In `grid` type listings, the alignment of the content within the card."
          long: |
            In grid type listings, the alignment of the content within the card (`left`, `right`, or `center`). Defaults to `left`.
      table-striped:
        boolean:
          description:
            short: "In `table` type listings, display the table rows with alternating background colors."
            long: |
              In table type listings, display the table rows with alternating background colors.
              Defaults to `false`.
      table-hover:
        boolean:
          description:
            short: "In `table` type listings, highlight rows of the table when the user hovers the mouse over them."
            long: |
              In table type listings, highlight rows of the table when the user hovers the mouse over them.
              Defaults to false.
      template:
        path:
          description:
            short: "The path to a custom listing template."
            long: |
              The path to a custom listing template.
      fields:
        arrayOf: string
        description:
          short: "The list of fields to include in this listing"
          long: |
            The list of fields to include in this listing.
      field-display-names:
        object:
          description:
            short: "A mapping of display names for listing fields."
            long: |
              A mapping that provides display names for specific fields. For example, to display the title column as ‘Report’ in a table listing you would write:

              ```yaml
              listing:
                field-display-names:
                title: "Report"
              ```
      field-types:
        object:
          description:
            short: "Provides the date type for the field of a listing item."
            long: |
              Provides the date type for the field of a listing item. Unknown fields are treated
              as strings unless a type is provided. Valid types are `date`, `number`.
      field-links:
        arrayOf: string
        description:
          short: "This list of fields to display as links in a table listing."
          long: |
            The list of fields to display as hyperlinks to the source document 
            when the listing type is a table. By default, only the `title` or 
            `filename` is displayed as a link.
      field-required:
        arrayOf: string
        description:
          short: "Fields that items in this listing must have populated."
          long: |
            Fields that items in this listing must have populated.
            If a listing is rendered and one more items in this listing 
            is missing a required field, an error will occur and the render will.
