

Python

supporting file directory is wrong when e.g. docs/foo.md

special tag named "label" that becomes #id in the AST, AND 
special tag named "caption" that becomes the alt text for figures
how does pandoc derive image label?
http://lierdakil.github.io/pandoc-crossref/#image-labels

figure size for pdf format

better injectability ergonimics for jupyter

auto-provide title and author from notebook_title notebook_author

https://jupytext.readthedocs.io/en/latest/formats.html#jupytext-markdown
https://jupyter-cache.readthedocs.io/en/latest/
  or just '--execute-run-code': all,cache,none
execute:
   run-code: 
   include-code: false

review: http://blog.juliusschulz.de/blog/ultimate-ipython-notebook


export interface FormatCell {
  "hide-cell": boolean;
  "hide-code": boolean;
  "hide-output": boolean;
  "hide-warnings": boolean;

  "remove-cell": boolean;
  "remove-code": boolean;
  "remove-output": boolean;
  "remove-warnings": boolean;

  "cell-folding": boolean;
}

// cell level tags:
/*

hide-cell
hide-code
hide-output
hide-warnings

show-cell
show-code
show-output
show-warnings

remove-cell
remove-code
remove-output
remove-warnings

include-cell
include-code
include-output
include-warnings

*/

// cell output control tags. also define some aliases for tags used in
// jupyterbook/runtools: https://github.com/mwouts/jupytext/issues/337
const kIncludeCodeTags = ["include-code"];
const kIncludeOutputTags = ["include-output"];
const kIncludeWarningsTags = ["include-warnings"];
const kRemoveCodeTags = ["remove-code", "remove-input", "remove_inupt"];
const kRemoveOutputTags = ["remove-output", "remove_output"];
const kRemoveWarningsTags = ["remove-warnings"];
const kRemoveCellTags = ["remove-cell", "remove_cell"];



investimate viola (deploy notebooks w/ a backend)

keep-source (for html formats, puts source in script tag)


papermill (use their convention for parameters)

consider automatic id resolution for "name" property. does it need to 
take account of pandoc format? important: relationship to crossref and
use of : in id (does crossref strip this out?)

consider id and class for knitr (including wrapping div). consider 
similar/generic dom structure for chunks and code cells (show/hide)

bs4 family of formats:

bs4-notebook 
bs4-article
bs4-dashboard
bs4-presentation
bs4-website
bs4-book

NOTE: matplotlib fig sizes don't work for pdf

memo/proposal on computations:
will be able to use RStudio chunk output and/or notebook for compute?
or perhaps require html_notebook?
computations could even be at a URL!!!

  {{= notebook.ipynb#visualization =}}
  {{< computation notebook.Rmd#chunk-label >}}

  {{< figure projections.xlsx#chunk-label caption="asfdasdf" label="" >}}

  {{< table projections.xlsx#fy-2019 label="projections" >}}

  {{< text notebook.Rmd##chunk-label >}}

  {{<   >}}

  {{< tweet https://twitter.com/foo/status/34453323455 >}}

  {{< video https://youtube.com/foo/status/34453323455 >}}


<< write tests >>

- Crossref system 
  - Adopt pandoc-crossref if custom labels PR is merged
  - Implement our own w/ largely similar syntax but thereom's, etc.
    Lua vs. Typescript

Project system:
  - Terminate at _quarto.yml w/ project: true
    (need to first determine if there is a project somewhere in the parent tree,
     if there is, then use this behavior, if not, use the first match)
  - External interactions with projects (output_dir, clean, etc.)
  
Port tinytex to JS; OR we need to implmeent various auto-install behaviors for latexmk, eg.
  had to do this to get biblatex working w/ latexmk
  (may want to automate installation if no biber + auto-map TinyTeX to path)
    tlmgr install biblatex
    tlmgr install biber
    ln -sf /Users/jjallaire/Library/TinyTeX/bin/x86_64-darwin/biber /usr/local/bin/biber
Note need to implement tinytex: false and tinytex options (e.g. min-runs, clean, output-dir, etc.)

Merge -M and --metadata-file with _quarto.yml and in-file YAML with same 
semantics as Pandoc

discover index.Rmd or ui.Rmd for quarto run. can't rely on 
rmarkdown::run b/c we need to figure out which Rmd to render







consider pluto notebooks (julia)

Meta-concepts on top of AST: e.g. tabs



