

https://jupyter-cache.readthedocs.io/en/latest/
  or just '--execute-run-code': all,cache,none
   run-code: all
   include-code: false


--execute-cache
    user,
    all,
    refresh,
    none,


execute:
  cache: refresh
  allow-errors: 


bs4 family of formats:

bs4-notebook
bs4-article
bs4-dashboard
bs4-presentation
bs4-website
bs4-book

memo/proposal on computations:
will be able to use RStudio chunk output and/or notebook for compute?
or perhaps require html_notebook?
computations could even be at a URL!!!

  {{= print("hello") }}

  {{< figure projections.xlsx#chunk-label caption="asfdasdf" label="" >}}

  {{< table projections.xlsx#fy-2019 label="projections" >}}

  {{< text notebook.Rmd##chunk-label >}}

  {{< tweet https://twitter.com/foo/status/34453323455 >}}

  {{< video https://youtube.com/foo/status/34453323455 >}}


<< write tests >>

- Crossref system
  - Adopt pandoc-crossref if custom labels PR is merged
  - Implement our own w/ largely similar syntax but thereom's, etc.
    Lua vs. Typescript
  figures for html/js blobs:
- display_data with type text/html
- display_data with type widget+view+json


Project system:
  - Terminate at _quarto.yml w/ project: true
    (need to first determine if there is a project somewhere in the parent tree,
     if there is, then use this behavior, if not, use the first match)
  - External interactions with projects (output_dir, clean, etc.)

Port tinytex to JS; OR we need to implmeent various auto-install behaviors for latexmk, eg.
  had to do this to get biblatex working w/ latexmk
  (may want to automate installation if no biber + auto-map TinyTeX to path)
    tlmgr install biblatex
    tlmgr install biber
    ln -sf /Users/jjallaire/Library/TinyTeX/bin/x86_64-darwin/biber /usr/local/bin/biber
Note need to implement tinytex: false and tinytex options (e.g. min-runs, clean, output-dir, etc.)

Merge -M and --metadata-file with _quarto.yml and in-file YAML with same
semantics as Pandoc

discover index.Rmd or ui.Rmd for quarto run. can't rely on
rmarkdown::run b/c we need to figure out which Rmd to render

consider pluto notebooks (julia)

Meta-concepts on top of AST: e.g. tabs



